/* reveal animation helpers (we use Tailwind utilities + these classes) */
.reveal {
  transition: opacity 600ms cubic-bezier(.2, .8, .2, 1), transform 600ms cubic-bezier(.2, .8, .2, 1);
  will-change: transform, opacity;
}

/* delays (you can tune or use Tailwind utilities) */
.reveal.delay-1 {
  transition-delay: 100ms;
}

.reveal.delay-2 {
  transition-delay: 200ms;
}

.reveal.delay-3 {
  transition-delay: 300ms;
}

.reveal.delay-4 {
  transition-delay: 400ms;
}

.reveal.delay-5 {
  transition-delay: 500ms;
}

.reveal.delay-6 {
  transition-delay: 600ms;
}

/* initially hidden */
.reveal.opacity-0,
.reveal[hidden] {
  opacity: 0;
  transform: translateY(24px);
}

/* revealed state (we add class 'in-view') */
.reveal.in-view {
  opacity: 1 !important;
  transform: translateY(0) !important;
}

/* skillbar transition */
.skill-bar {
  transition: width 1200ms cubic-bezier(.2, .8, .2, 1);
}

/* General component transition */
:host {
  transition: all 0.3s ease-in-out;
}

/* Enhanced skill bar animation */
.skill-bar {
  transition: width 1500ms cubic-bezier(.2, .8, .2, 1);
  transform-origin: left;
  width: 0 !important;
}

/* Skill bar animation handled in TS */

/* Improved reveal animation */
.reveal {
  transition: opacity 600ms cubic-bezier(.2, .8, .2, 1), transform 600ms cubic-bezier(.2, .8, .2, 1);
  will-change: transform, opacity;
}

/* Enhanced hover effects */
.bg-gradient-to-br.from-white.via-white.to-primary\/5 {
  transition: all 0.3s ease-in-out;
}

.bg-gradient-to-br.from-white\/90.to-white\/70 {
  transition: all 0.3s ease-in-out;
}

/* Smooth counter animation */
.counter {
  transition: all 0.3s ease-in-out;
}
.skill-bar {
  box-shadow: 0 0 10px rgba(59,130,246,0.6);
}
